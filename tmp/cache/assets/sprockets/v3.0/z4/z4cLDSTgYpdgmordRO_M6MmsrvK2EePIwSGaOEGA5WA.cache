I"~(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.OnlineNotification = (function(superClass) {
    extend(OnlineNotification, superClass);

    function OnlineNotification() {
      return OnlineNotification.__super__.constructor.apply(this, arguments);
    }

    OnlineNotification.configure('OnlineNotification', 'name', 'seen');

    OnlineNotification.extend(Spine.Model.Ajax);

    OnlineNotification.url = OnlineNotification.apiPath + '/online_notifications';


    /*
    
    App.OnlineNotification.play()
    
    App.OnlineNotification.play('bell.mp3')
     */

    OnlineNotification.play = function(file) {
      var preferences, sound;
      if (file) {
        sound = new Audio("assets/sounds/" + file);
        sound.play();
        return;
      }
      preferences = App.Session.get('preferences');
      if (!preferences) {
        return;
      }
      if (!App.OnlineNotification.soundEnabled()) {
        return;
      }
      sound = App.Config.get('latest_online_notification_sond');
      if (sound && !sound.ended) {
        return;
      }
      file = App.OnlineNotification.soundFile();
      sound = new Audio("assets/sounds/" + file);
      App.Config.set('latest_online_notification_sond', sound);
      return sound.play();
    };


    /*
    
    App.OnlineNotification.soundEnabled()
     */

    OnlineNotification.soundEnabled = function() {
      var preferences;
      preferences = App.Session.get('preferences');
      if (!preferences) {
        return false;
      }
      if (!preferences.notification_sound) {
        preferences.notification_sound = {};
      }
      if (preferences.notification_sound.enabled === void 0) {
        preferences.notification_sound.enabled = true;
      }
      if (preferences.notification_sound.enabled.toString() === 'false') {
        return false;
      }
      return true;
    };


    /*
    
    App.OnlineNotification.soundFile()
     */

    OnlineNotification.soundFile = function() {
      var file, preferences;
      file = 'Xylo.mp3';
      preferences = App.Session.get('preferences');
      if (!preferences) {
        return file;
      }
      if (!preferences.notification_sound) {
        return file;
      }
      if (!preferences.notification_sound.file) {
        return file;
      }
      return preferences.notification_sound.file;
    };


    /*
    
    App.OnlineNotification.seen( 'Ticket', 123 )
     */

    OnlineNotification.seen = function(object, o_id) {
      var i, len, notification, notifications, results;
      notifications = App.OnlineNotification.all();
      results = [];
      for (i = 0, len = notifications.length; i < len; i++) {
        notification = notifications[i];
        if (notification.object === object && notification.o_id.toString() === o_id.toString()) {
          if (notification.seen !== true) {
            notification.seen = true;
            results.push(notification.save());
          } else {
            results.push(void 0);
          }
        } else {
          results.push(void 0);
        }
      }
      return results;
    };

    return OnlineNotification;

  })(App.Model);

}).call(this);
:ET