I"¶function(__obj) {
  if (!__obj) __obj = {};
  var __out = [], __capture = function(callback) {
    var out = __out, result;
    __out = [];
    callback.call(this);
    result = __out.join('');
    __out = out;
    return __safe(result);
  }, __sanitize = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else if (typeof value !== 'undefined' && value != null) {
      return __escape(value);
    } else {
      return '';
    }
  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
  __safe = __obj.safe = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else {
      if (!(typeof value !== 'undefined' && value != null)) value = '';
      var result = new String(value);
      result.ecoSafe = true;
      return result;
    }
  };
  if (!__escape) {
    __escape = __obj.escape = function(value) {
      return ('' + value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;');
    };
  }
  (function() {
    (function() {
      var i, j, len, len1, ref, ref1, row, user;
    
      __out.push('<div class="sidebar-block">\n    <div class="avatar organizationInfo-avatar size-50">\n      <a href="');
    
      __out.push(this.organization.uiUrl());
    
      __out.push('">\n        ');
    
      __out.push(this.Icon('organization'));
    
      __out.push('\n      </a>\n    </div>\n    <h3 title="');
    
      __out.push(this.Ti('Name'));
    
      __out.push('">');
    
      __out.push(__sanitize(this.organization.displayName()));
    
      __out.push('</h3>\n</div>\n\n');
    
      ref = this.organizationData;
      for (i = 0, len = ref.length; i < len; i++) {
        row = ref[i];
        __out.push('\n  ');
        if (this.organization[row.name] || row.name === 'note') {
          __out.push('\n    <div class="sidebar-block">\n    ');
          if (row.tag !== 'richtext') {
            __out.push('\n      <label>');
            __out.push(this.T(row.display));
            __out.push('</label>\n      ');
            __out.push(this.P(this.organization, row.name));
            __out.push('\n    ');
          } else {
            __out.push('\n      <label>');
            __out.push(this.T(row.display));
            __out.push('</label>\n      <div contenteditable="true" data-name="');
            __out.push(__sanitize(row.name));
            __out.push('" data-type="update-org" data-placeholder="');
            __out.push(this.Ti('Add a Note'));
            __out.push('">');
            __out.push(this.organization[row.name]);
            __out.push('</div>\n    ');
          }
          __out.push('\n    </div>\n  ');
        }
        __out.push('\n');
      }
    
      __out.push('\n\n');
    
      if (this.organization.members) {
        __out.push('\n<hr>\n<div class="sidebar-block">\n  <label>');
        __out.push(this.T('Members'));
        __out.push('</label>\n  <div class="userList">\n');
        ref1 = this.organization.members;
        for (j = 0, len1 = ref1.length; j < len1; j++) {
          user = ref1[j];
          __out.push('\n    <div class="userList-entry">\n      ');
          __out.push(user.avatar("40"));
          __out.push('\n      <a href="');
          __out.push(user.uiUrl());
          __out.push('" class="userList-name user-popover" data-id="');
          __out.push(user.id);
          __out.push('">\n        ');
          __out.push(__sanitize(user.displayName()));
          __out.push('\n      </a>\n    </div>\n');
        }
        __out.push('\n  </div>\n</div>\n');
      }
    
      __out.push('\n');
    
    }).call(this);
    
  }).call(__obj);
  __obj.safe = __objSafe, __obj.escape = __escape;
  return __out.join('');
}:ET