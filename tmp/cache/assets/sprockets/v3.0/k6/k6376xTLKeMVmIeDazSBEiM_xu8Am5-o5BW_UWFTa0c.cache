I"€(function() {
  App.UiElement.autocompletion = (function() {
    function autocompletion() {}

    autocompletion.render = function(attribute, params) {
      var a, item;
      if (params[attribute.name + '_autocompletion_value_shown']) {
        attribute.valueShown = params[attribute.name + '_autocompletion_value_shown'];
      }
      item = $(App.view('generic/autocompletion')({
        attribute: attribute
      }));
      a = (function(_this) {
        return function() {
          var b, local_attribute, local_attribute_full, source;
          local_attribute = '#' + attribute.id;
          local_attribute_full = '#' + attribute.id + '_autocompletion';
          _this.callback = attribute.callback;
          if (_this.callback && attribute.value && _this.params) {
            _this.callback(_this.params);
          }
          b = function(event, item) {
            $(local_attribute).val(item.id).trigger('change');
            $(local_attribute + '_autocompletion_value_shown').val(item.value);
            if (_this.callback) {
              params = App.ControllerForm.params(form);
              return _this.callback(params);
            }
          };

          /*
          $(@local_attribute_full).tagsInput(
            autocomplete_url: '/users/search',
            height: '30px',
            width: '530px',
            auto: {
              source: '/users/search',
              minLength: 2,
              select: (event, ui) ->
                #@log 'notice', 'selected', event, ui
                b(event, ui.item)
            }
          )
           */
          source = attribute.source;
          if (typeof source === 'string') {
            source = source.replace('#{@apiPath}', App.Config.get('api_path'));
          }
          return $(local_attribute_full).autocomplete({
            source: source,
            minLength: attribute.minLengt || 3,
            select: function(event, ui) {
              return b(event, ui.item);
            }
          });
        };
      })(this);
      App.Delay.set(a, 280, void 0, 'form_autocompletion');
      return item;
    };

    return autocompletion;

  })();

}).call(this);
:ET