I"”(function() {
  var _storeSingleton;

  App.LocalStorage = (function() {
    var _instance;

    function LocalStorage() {}

    _instance = void 0;

    LocalStorage.set = function(key, value, user_id) {
      if (_instance === void 0) {
        if (_instance == null) {
          _instance = new _storeSingleton;
        }
      }
      return _instance.set(key, value, user_id);
    };

    LocalStorage.get = function(key, user_id) {
      if (_instance === void 0) {
        if (_instance == null) {
          _instance = new _storeSingleton;
        }
      }
      return _instance.get(key, user_id);
    };

    LocalStorage["delete"] = function(key, user_id) {
      if (_instance === void 0) {
        if (_instance == null) {
          _instance = new _storeSingleton;
        }
      }
      return _instance["delete"](key);
    };

    LocalStorage.clear = function() {
      if (_instance === void 0) {
        if (_instance == null) {
          _instance = new _storeSingleton;
        }
      }
      return _instance.clear();
    };

    LocalStorage.list = function() {
      if (_instance === void 0) {
        if (_instance == null) {
          _instance = new _storeSingleton;
        }
      }
      return _instance.list();
    };

    LocalStorage.usage = function() {
      if (_instance === void 0) {
        if (_instance == null) {
          _instance = new _storeSingleton;
        }
      }
      return _instance.usage();
    };

    return LocalStorage;

  })();

  _storeSingleton = (function() {
    function _storeSingleton() {}

    _storeSingleton.prototype.set = function(key, value, user_id) {
      var e;
      try {
        if (user_id) {
          key = "personal::" + user_id + "::" + key;
        }
        return localStorage.setItem(key, JSON.stringify(value));
      } catch (error) {
        e = error;
        return App.Log.error('App.LocalStorage', 'Local storage error!', e);
      }
    };

    _storeSingleton.prototype.get = function(key, user_id) {
      var value;
      if (user_id) {
        key = "personal::" + user_id + "::" + key;
      }
      value = localStorage.getItem(key);
      if (!value) {
        return;
      }
      return JSON.parse(value);
    };

    _storeSingleton.prototype["delete"] = function(key, user_id) {
      if (user_id) {
        key = "personal::" + user_id + "::" + key;
      }
      return localStorage.removeItem(key);
    };

    _storeSingleton.prototype.clear = function() {
      return localStorage.clear();
    };

    _storeSingleton.prototype.list = function() {
      return window.localStorage;
    };

    _storeSingleton.prototype.usage = function() {
      var key, total, value;
      total = '';
      for (key in window.localStorage) {
        value = localStorage.getItem(key);
        if (_.isString(value)) {
          total += value;
        }
      }
      return byteLength(total);
    };

    return _storeSingleton;

  })();

}).call(this);
:ET