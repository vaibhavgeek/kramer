I" (function() {
  var Widget,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Widget = (function(superClass) {
    extend(Widget, superClass);

    function Widget() {
      Widget.__super__.constructor.apply(this, arguments);
      App.Event.bind('config_update', function(data) {
        App.Config.set(data.name, data.value);
        return App.Event.trigger('config_update_local', data);
      });
    }

    return Widget;

  })(App.Controller);

  App.Config.set('app_config_update', Widget, 'Widgets');

}).call(this);
:ET