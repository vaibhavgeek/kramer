I"q	(function() {
  var Index,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Index = (function(superClass) {
    extend(Index, superClass);

    Index.prototype.requiredPermission = 'admin.session';

    Index.prototype.header = 'Sessions';

    Index.prototype.events = {
      'click .js-delete': 'destroy'
    };

    function Index() {
      Index.__super__.constructor.apply(this, arguments);
      this.load();
      this.interval((function(_this) {
        return function() {
          return _this.load();
        };
      })(this), 45000);
    }

    Index.prototype.load = function() {
      this.startLoading();
      return this.ajax({
        id: 'sessions',
        type: 'GET',
        url: this.apiPath + "/sessions",
        success: (function(_this) {
          return function(data) {
            _this.stopLoading();
            App.Collection.loadAssets(data.assets);
            _this.sessions = data.sessions;
            return _this.render();
          };
        })(this)
      });
    };

    Index.prototype.render = function() {
      var i, len, ref, session;
      ref = this.sessions;
      for (i = 0, len = ref.length; i < len; i++) {
        session = ref[i];
        if (session.data && session.data.user_id) {
          session.data.user = App.User.find(session.data.user_id);
        }
      }
      return this.html(App.view('session')({
        sessions: this.sessions
      }));
    };

    Index.prototype.destroy = function(e) {
      var sessionId;
      e.preventDefault();
      sessionId = $(e.target).closest('a').data('session-id');
      return this.ajax({
        id: "sessions/" + sessionId,
        type: 'DELETE',
        url: this.apiPath + "/sessions/" + sessionId,
        success: (function(_this) {
          return function(data) {
            return _this.load();
          };
        })(this)
      });
    };

    return Index;

  })(App.ControllerSubContent);

  App.Config.set('Session', {
    prio: 3800,
    name: 'Sessions',
    parent: '#system',
    target: '#system/sessions',
    controller: Index,
    permission: ['admin.session']
  }, 'NavBarAdmin');

}).call(this);
:ET