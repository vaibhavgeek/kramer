I"ÿ(function() {
  var Index,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Index = (function(superClass) {
    extend(Index, superClass);

    Index.prototype.requiredPermission = 'admin.text_module';

    Index.prototype.header = 'Text modules';

    function Index() {
      Index.__super__.constructor.apply(this, arguments);
      new App.ControllerGenericIndex({
        el: this.el,
        id: this.id,
        genericObject: 'TextModule',
        importCallback: function() {
          return new App.Import({
            baseUrl: '/api/v1/text_modules',
            container: this.el.closest('.content'),
            deleteOption: true
          });
        },
        pageData: {
          home: 'text_modules',
          object: 'TextModule',
          objects: 'Text modules',
          navupdate: '#text_modules',
          notes: ['Text modules are ...'],
          buttons: [
            {
              name: 'Import',
              'data-type': 'import',
              "class": 'btn'
            }, {
              name: 'New text module',
              'data-type': 'new',
              "class": 'btn--success'
            }
          ]
        },
        container: this.el.closest('.content')
      });
    }

    return Index;

  })(App.ControllerSubContent);

  App.Config.set('TextModule', {
    prio: 2300,
    name: 'Text modules',
    parent: '#manage',
    target: '#manage/text_modules',
    controller: Index,
    permission: ['admin.text_module']
  }, 'NavBarAdmin');

}).call(this);
:ET