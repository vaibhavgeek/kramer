I"’(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.EmailAddress = (function(superClass) {
    extend(EmailAddress, superClass);

    function EmailAddress() {
      return EmailAddress.__super__.constructor.apply(this, arguments);
    }

    EmailAddress.configure('EmailAddress', 'realname', 'email', 'channel_id', 'note', 'active', 'updated_at');

    EmailAddress.extend(Spine.Model.Ajax);

    EmailAddress.url = EmailAddress.apiPath + '/email_addresses';

    EmailAddress.filterChannel = function(options, type) {
      if (type !== 'collection') {
        return options;
      }
      return _.filter(options, function(channel) {
        if (channel && channel.area === 'Email::Account') {
          return channel;
        }
      });
    };

    EmailAddress.configure_attributes = [
      {
        name: 'realname',
        display: 'Real name',
        tag: 'input',
        type: 'text',
        limit: 250,
        "null": false
      }, {
        name: 'email',
        display: 'Email',
        tag: 'input',
        type: 'email',
        limit: 250,
        "null": false
      }, {
        name: 'channel_id',
        display: 'Channel',
        tag: 'select',
        multiple: false,
        "null": true,
        relation: 'Channel',
        nulloption: true,
        filter: EmailAddress.filterChannel,
        do_not_log: true
      }, {
        name: 'note',
        display: 'Note',
        tag: 'textarea',
        note: 'Notes are visible to agents only, never to customers.',
        limit: 250,
        "null": true
      }, {
        name: 'updated_at',
        display: 'Updated',
        tag: 'datetime',
        readonly: 1
      }, {
        name: 'active',
        display: 'Active',
        tag: 'active',
        readonly: 1
      }
    ];

    EmailAddress.configure_overview = ['realname', 'email'];

    return EmailAddress;

  })(App.Model);

}).call(this);
:ET