I"ª(function() {
  var ManageRouter,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.Manage = (function(superClass) {
    extend(Manage, superClass);

    function Manage() {
      return Manage.__super__.constructor.apply(this, arguments);
    }

    Manage.prototype.authenticateRequired = true;

    Manage.prototype.configKey = 'NavBarAdmin';

    return Manage;

  })(App.ControllerNavSidbar);

  ManageRouter = (function(superClass) {
    extend(ManageRouter, superClass);

    ManageRouter.prototype.requiredPermission = ['admin.*'];

    function ManageRouter(params) {
      ManageRouter.__super__.constructor.apply(this, arguments);
      this.authenticateCheckRedirect();
      App.TaskManager.execute({
        key: 'Manage',
        controller: 'Manage',
        params: params,
        show: true,
        persistent: true
      });
    }

    return ManageRouter;

  })(App.ControllerPermanent);

  App.Config.set('manage', ManageRouter, 'Routes');

  App.Config.set('manage/:target', ManageRouter, 'Routes');

  App.Config.set('settings/:target', ManageRouter, 'Routes');

  App.Config.set('channels/:target', ManageRouter, 'Routes');

  App.Config.set('channels/:target/:channel_id', ManageRouter, 'Routes');

  App.Config.set('system/:target', ManageRouter, 'Routes');

  App.Config.set('system/:target/:integration', ManageRouter, 'Routes');

  App.Config.set('Manage', {
    prio: 1000,
    name: 'Manage',
    target: '#manage',
    permission: ['admin.*']
  }, 'NavBarAdmin');

  App.Config.set('Channels', {
    prio: 2500,
    name: 'Channels',
    target: '#channels',
    permission: ['admin.*']
  }, 'NavBarAdmin');

  App.Config.set('Settings', {
    prio: 7000,
    name: 'Settings',
    target: '#settings',
    permission: ['admin.*']
  }, 'NavBarAdmin');

  App.Config.set('System', {
    prio: 8000,
    name: 'System',
    target: '#system',
    permission: ['admin.*']
  }, 'NavBarAdmin');

}).call(this);
:ET