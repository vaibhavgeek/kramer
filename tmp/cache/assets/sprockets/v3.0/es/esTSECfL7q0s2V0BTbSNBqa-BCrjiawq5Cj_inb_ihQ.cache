I"í(function() {
  var _configSingleton;

  App.Config = (function() {
    var _instance;

    function Config() {}

    _instance = void 0;

    Config.init = function() {
      return _instance != null ? _instance : _instance = new _configSingleton;
    };

    Config.get = function(key, group) {
      if (_instance === void 0) {
        if (_instance == null) {
          _instance = new _configSingleton;
        }
      }
      return _instance.get(key, group);
    };

    Config.set = function(key, value, group) {
      if (_instance === void 0) {
        if (_instance == null) {
          _instance = new _configSingleton;
        }
      }
      return _instance.set(key, value, group);
    };

    Config.all = function() {
      if (_instance === void 0) {
        if (_instance == null) {
          _instance = new _configSingleton;
        }
      }
      return _instance.all();
    };

    return Config;

  })();

  _configSingleton = (function() {
    function _configSingleton() {
      this.config = {};
    }

    _configSingleton.prototype.get = function(key, group) {
      if (group) {
        if (!group in this.config) {
          return void 0;
        }
        if (this.config[group] === void 0) {
          return void 0;
        }
        return this.config[group][key];
      }
      return this.config[key];
    };

    _configSingleton.prototype.set = function(key, value, group) {
      if (group) {
        if (!this.config[group]) {
          this.config[group] = {};
        }
        return this.config[group][key] = value;
      } else {
        return this.config[key] = value;
      }
    };

    _configSingleton.prototype.all = function() {
      return this.config;
    };

    return _configSingleton;

  })();

}).call(this);
:ET