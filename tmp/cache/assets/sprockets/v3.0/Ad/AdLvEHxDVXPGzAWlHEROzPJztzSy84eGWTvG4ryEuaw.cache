I"{function(__obj) {
  if (!__obj) __obj = {};
  var __out = [], __capture = function(callback) {
    var out = __out, result;
    __out = [];
    callback.call(this);
    result = __out.join('');
    __out = out;
    return __safe(result);
  }, __sanitize = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else if (typeof value !== 'undefined' && value != null) {
      return __escape(value);
    } else {
      return '';
    }
  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
  __safe = __obj.safe = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else {
      if (!(typeof value !== 'undefined' && value != null)) value = '';
      var result = new String(value);
      result.ecoSafe = true;
      return result;
    }
  };
  if (!__escape) {
    __escape = __obj.escape = function(value) {
      return ('' + value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;');
    };
  }
  (function() {
    (function() {
      var folder, ref, result;
    
      __out.push('<ul>\n  <li>');
    
      __out.push(this.T('%s user to %s user', 'Exchange', 'Zammad'));
    
      __out.push(' (');
    
      __out.push(__sanitize(this.job.result.total));
    
      __out.push('):\n    <ul>\n      <li>');
    
      __out.push(this.T('Users'));
    
      __out.push(': ');
    
      __out.push(__sanitize(this.job.result.created));
    
      __out.push(' ');
    
      __out.push(this.T('created'));
    
      __out.push(', ');
    
      __out.push(__sanitize(this.job.result.updated));
    
      __out.push(' ');
    
      __out.push(this.T('updated'));
    
      __out.push(', ');
    
      __out.push(__sanitize(this.job.result.unchanged));
    
      __out.push(' ');
    
      __out.push(this.T('untouched'));
    
      __out.push(', ');
    
      __out.push(__sanitize(this.job.result.skipped));
    
      __out.push(' ');
    
      __out.push(this.T('skipped'));
    
      __out.push(', ');
    
      __out.push(__sanitize(this.job.result.failed));
    
      __out.push(' ');
    
      __out.push(this.T('failed'));
    
      __out.push('\n    </ul>\n  </li>\n  ');
    
      if (!_.isEmpty(this.job.result.folders)) {
        __out.push('\n    <li>');
        __out.push(this.T('%s folders', 'Exchange'));
        __out.push(':\n      <ul>\n        ');
        ref = this.job.result.folders;
        for (folder in ref) {
          result = ref[folder];
          __out.push('\n          <li>');
          __out.push(folder);
          __out.push(': ');
          __out.push(__sanitize(result.created));
          __out.push(' ');
          __out.push(this.T('created'));
          __out.push(', ');
          __out.push(__sanitize(result.updated));
          __out.push(' ');
          __out.push(this.T('updated'));
          __out.push(', ');
          __out.push(__sanitize(result.unchanged));
          __out.push(' ');
          __out.push(this.T('untouched'));
          __out.push(', ');
          __out.push(__sanitize(result.failed));
          __out.push(' ');
          __out.push(this.T('failed'));
          __out.push('\n        ');
        }
        __out.push('\n      </ul>\n    </li>\n  ');
      }
    
      __out.push('\n</ul>\n');
    
    }).call(this);
    
  }).call(__obj);
  __obj.safe = __objSafe, __obj.escape = __escape;
  return __out.join('');
}:ET