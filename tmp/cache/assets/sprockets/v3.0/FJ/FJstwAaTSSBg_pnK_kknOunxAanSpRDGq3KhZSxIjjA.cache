I"r(function() {
  var TelegramReply;

  TelegramReply = (function() {
    function TelegramReply() {}

    TelegramReply.action = function(actions, ticket, article, ui) {
      if (ui.permissionCheck('ticket.customer')) {
        return actions;
      }
      if (article.sender.name === 'Customer' && article.type.name === 'telegram personal-message') {
        actions.push({
          name: 'reply',
          type: 'telegramPersonalMessageReply',
          icon: 'reply',
          href: '#'
        });
      }
      return actions;
    };

    TelegramReply.perform = function(articleContainer, type, ticket, article, ui) {
      var articleNew;
      if (type !== 'telegramPersonalMessageReply') {
        return true;
      }
      ui.scrollToCompose();
      type = App.TicketArticleType.find(article.type_id);
      articleNew = {
        to: '',
        cc: '',
        body: '',
        in_reply_to: ''
      };
      if (article.message_id) {
        articleNew.in_reply_to = article.message_id;
      }
      articleNew.body = ui.el.closest('.ticketZoom').find('.article-add [data-name="body"]').html().trim() || '';
      App.Event.trigger('ui::ticket::setArticleType', {
        ticket: ticket,
        type: type,
        article: articleNew,
        position: 'end'
      });
      return true;
    };

    TelegramReply.articleTypes = function(articleTypes, ticket, ui) {
      var articleTypeCreate;
      if (!ui.permissionCheck('ticket.agent')) {
        return articleTypes;
      }
      if (!ticket || !ticket.create_article_type_id) {
        return articleTypes;
      }
      articleTypeCreate = App.TicketArticleType.find(ticket.create_article_type_id).name;
      if (articleTypeCreate !== 'telegram personal-message') {
        return articleTypes;
      }
      articleTypes.push({
        name: 'telegram personal-message',
        icon: 'telegram',
        attributes: [],
        internal: false,
        features: ['attachment'],
        maxTextLength: 10000,
        warningTextLength: 5000
      });
      return articleTypes;
    };

    TelegramReply.setArticleTypePost = function(type, ticket, ui) {
      var cleanHTML, rawHTML;
      if (type !== 'telegram personal-message') {
        return;
      }
      rawHTML = ui.$('[data-name=body]').html();
      cleanHTML = App.Utils.htmlRemoveRichtext(rawHTML);
      if (cleanHTML && cleanHTML.html() !== rawHTML) {
        return ui.$('[data-name=body]').html(cleanHTML);
      }
    };

    TelegramReply.params = function(type, params, ui) {
      if (type === 'telegram personal-message') {
        App.Utils.htmlRemoveRichtext(ui.$('[data-name=body]'), false);
        params.content_type = 'text/plain';
        params.body = App.Utils.html2text(params.body, true);
      }
      return params;
    };

    return TelegramReply;

  })();

  App.Config.set('300-TelegramReply', TelegramReply, 'TicketZoomArticleAction');

}).call(this);
:ET