I"function(__obj) {
  if (!__obj) __obj = {};
  var __out = [], __capture = function(callback) {
    var out = __out, result;
    __out = [];
    callback.call(this);
    result = __out.join('');
    __out = out;
    return __safe(result);
  }, __sanitize = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else if (typeof value !== 'undefined' && value != null) {
      return __escape(value);
    } else {
      return '';
    }
  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
  __safe = __obj.safe = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else {
      if (!(typeof value !== 'undefined' && value != null)) value = '';
      var result = new String(value);
      result.ecoSafe = true;
      return result;
    }
  };
  if (!__escape) {
    __escape = __obj.escape = function(value) {
      return ('' + value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;');
    };
  }
  (function() {
    (function() {
      var button, i, j, len, len1, ref, ref1;
    
      __out.push('<div class="modal-dialog">\n  <form autocomplete="off">\n    <div class="modal-content">\n      <div class="modal-header">\n  ');
    
      if (this.buttonClose) {
        __out.push('\n        <div class="modal-close js-close">\n          ');
        __out.push(this.Icon('diagonal-cross'));
        __out.push('\n        </div>\n  ');
      }
    
      __out.push('\n  ');
    
      if (this.head) {
        __out.push('\n        <h1 class="modal-title">');
        if (this.headPrefix) {
          __out.push(this.T(this.headPrefix));
          __out.push(': ');
        }
        __out.push(this.T(this.head));
        __out.push('</h1>\n  ');
      }
    
      __out.push('\n      </div>\n      <div class="modal-body">\n      ');
    
      __out.push(this.content);
    
      __out.push('\n      </div>\n      <div class="modal-footer">\n  ');
    
      if (this.buttonCancel) {
        __out.push('\n        <div class="modal-leftFooter">\n          <a class="btn ');
        __out.push(__sanitize(this.buttonCancelClass));
        __out.push(' js-cancel align-left" href="#">');
        __out.push(this.T(this.buttonCancel));
        __out.push('</a>\n        </div>\n  ');
      } else if (this.leftButtons) {
        __out.push('\n    ');
        ref = this.leftButtons;
        for (i = 0, len = ref.length; i < len; i++) {
          button = ref[i];
          __out.push('\n        <div class="modal-leftFooter">\n          <div class="btn ');
          __out.push(__sanitize(button.className));
          __out.push(' align-left" href="#">');
          __out.push(this.T(button.text));
          __out.push('</div>\n        </div>\n    ');
        }
        __out.push('\n  ');
      }
    
      __out.push('\n  ');
    
      ref1 = this.centerButtons;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        button = ref1[j];
        __out.push('\n        <div class="modal-centerFooter">\n          <div class="btn ');
        __out.push(__sanitize(button.className));
        __out.push(' align-center">');
        __out.push(this.T(button.text));
        __out.push('</div>\n        </div>\n  ');
      }
    
      __out.push('\n  ');
    
      if (this.buttonSubmit) {
        __out.push('\n        <div class="modal-rightFooter">\n          <button type="submit" class="btn ');
        __out.push(__sanitize(this.buttonClass));
        __out.push(' js-submit align-right">');
        __out.push(this.T(this.buttonSubmit));
        __out.push('</button>\n        </div>\n  ');
      }
    
      __out.push('\n      </div>\n    </div>\n  </form>\n</div>\n');
    
    }).call(this);
    
  }).call(__obj);
  __obj.safe = __objSafe, __obj.escape = __escape;
  return __out.join('');
}:ET