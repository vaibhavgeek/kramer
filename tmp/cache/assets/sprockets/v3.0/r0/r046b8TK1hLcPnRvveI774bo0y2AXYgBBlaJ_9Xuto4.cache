I"ì(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.Permission = (function(superClass) {
    extend(Permission, superClass);

    function Permission() {
      return Permission.__super__.constructor.apply(this, arguments);
    }

    Permission.configure('Permission', 'name', 'note', 'active');

    Permission.extend(Spine.Model.Ajax);

    Permission.url = Permission.apiPath + '/permissions';

    return Permission;

  })(App.Model);

}).call(this);
:ET