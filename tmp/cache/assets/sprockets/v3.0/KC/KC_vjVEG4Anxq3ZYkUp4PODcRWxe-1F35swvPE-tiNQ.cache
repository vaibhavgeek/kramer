I"—(function() {
  var Branding,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Branding = (function(superClass) {
    extend(Branding, superClass);

    Branding.prototype.requiredPermission = 'admin.branding';

    Branding.prototype.header = 'Branding';

    function Branding() {
      Branding.__super__.constructor.apply(this, arguments);
      this.title('Branding', true);
      this.tabs = [
        {
          name: 'Base',
          'target': 'base',
          controller: App.SettingsArea,
          params: {
            area: 'System::Branding'
          }
        }
      ];
      this.render();
    }

    return Branding;

  })(App.ControllerTabs);

  App.Config.set('SettingBranding', {
    prio: 1200,
    parent: '#settings',
    name: 'Branding',
    target: '#settings/branding',
    controller: Branding,
    permission: ['admin.branding']
  }, 'NavBarAdmin');

}).call(this);
:ET