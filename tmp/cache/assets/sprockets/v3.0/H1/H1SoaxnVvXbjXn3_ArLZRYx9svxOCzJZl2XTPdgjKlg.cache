I"Õ(function() {
  App.UiElement.sla_times = (function() {
    function sla_times() {}

    sla_times.render = function(attribute, params) {
      var item;
      if (params == null) {
        params = {};
      }
      if (!params.first_response_time && params.first_response_time !== 0) {
        params.first_response_time = 120;
      }
      item = $(App.view('generic/sla_times')({
        attribute: attribute,
        first_response_time: params.first_response_time,
        update_time: params.update_time,
        solution_time: params.solution_time,
        first_response_time_in_text: this.toText(params.first_response_time),
        update_time_in_text: this.toText(params.update_time),
        solution_time_in_text: this.toText(params.solution_time)
      }));
      item.find('.js-timeConvertFrom').timepicker({
        maxHours: 999
      });
      item.find('.js-activateRow').bind('change', function(e) {
        var element, row;
        element = $(e.target);
        row = element.closest('tr');
        if (element.prop('checked')) {
          return row.addClass('is-active');
        } else {
          row.removeClass('is-active');
          row.find('.js-timeConvertFrom').val('');
          return row.find('.js-timeConvertTo').val('');
        }
      });
      item.find('.js-timeConvertFrom').bind('keyup focus blur', (function(_this) {
        return function(e) {
          var dest, element, inMinutes, inText, row;
          element = $(e.target);
          inText = element.val();
          row = element.closest('tr');
          dest = element.closest('td').find('.js-timeConvertTo');
          inMinutes = _this.toMinutes(inText);
          if (!inMinutes) {
            element.addClass('has-error');
            dest.val('');
          } else {
            element.removeClass('has-error');
            dest.val(inMinutes);
          }
          row.find('.js-activateRow').prop('checked', true);
          return row.addClass('is-active');
        };
      })(this));
      item.find('.js-timeConvertFrom').each(function() {
        var row;
        row = $(this).closest('tr').find('.js-activateRow');
        if ($(this).val()) {
          return row.prop('checked', true);
        } else {
          return row.prop('checked', false);
        }
      });
      return item;
    };

    sla_times.toMinutes = function(hh) {
      var hour, minute;
      hh = hh.split(':');
      hour = parseInt(hh[0]);
      minute = parseInt(hh[1]);
      if (hour === (0/0)) {
        return;
      }
      if (minute === (0/0)) {
        return;
      }
      return (hour * 60) + minute;
    };

    sla_times.toText = function(m) {
      var hours, minutes;
      m = parseInt(m);
      if (!m) {
        return;
      }
      minutes = m % 60;
      hours = Math.floor(m / 60);
      if (minutes < 10) {
        minutes = "0" + minutes;
      }
      if (hours < 10) {
        hours = "0" + hours;
      }
      return hours + ":" + minutes;
    };

    return sla_times;

  })();

}).call(this);
:ET