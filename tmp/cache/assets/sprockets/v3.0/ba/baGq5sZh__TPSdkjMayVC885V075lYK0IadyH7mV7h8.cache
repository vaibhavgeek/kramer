I"ª(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.ScriptSnipped = (function(superClass) {
    extend(ScriptSnipped, superClass);

    ScriptSnipped.prototype.elements = {
      '.js-code': 'code'
    };

    function ScriptSnipped() {
      this.render = bind(this.render, this);
      ScriptSnipped.__super__.constructor.apply(this, arguments);
      this.records = [];
      this.render();
    }

    ScriptSnipped.prototype.render = function() {
      this.html(App.view('widget/script_snipped')({
        records: this.records,
        description: this.description,
        style: this.style,
        content: this.content
      }));
      return this.code.each(function(i, block) {
        return hljs.highlightBlock(block);
      });
    };

    return ScriptSnipped;

  })(App.Controller);

}).call(this);
:ET