I"³(function() {
  var Index, State,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Index = (function(superClass) {
    extend(Index, superClass);

    function Index() {
      this.render = bind(this.render, this);
      return Index.__super__.constructor.apply(this, arguments);
    }

    Index.prototype.featureIntegration = 'nagios_integration';

    Index.prototype.featureName = 'Nagios';

    Index.prototype.featureConfig = 'nagios_config';

    Index.prototype.description = [['This service receives emails from %s and creates tickets with host and service.', 'Nagios'], ['If the host and service is recovered again, the ticket will be closed automatically.']];

    Index.prototype.render = function() {
      Index.__super__.render.apply(this, arguments);
      return new App.SettingsForm({
        area: 'Integration::Nagios',
        el: this.$('.js-form')
      });
    };

    return Index;

  })(App.ControllerIntegrationBase);

  State = (function() {
    function State() {}

    State.current = function() {
      return App.Setting.get('nagios_integration');
    };

    return State;

  })();

  App.Config.set('IntegrationNagios', {
    name: 'Nagios',
    target: '#system/integration/nagios',
    description: 'An open source monitoring tool.',
    controller: Index,
    state: State
  }, 'NavBarIntegrations');

}).call(this);
:ET