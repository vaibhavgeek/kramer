I"ò
function(__obj) {
  if (!__obj) __obj = {};
  var __out = [], __capture = function(callback) {
    var out = __out, result;
    __out = [];
    callback.call(this);
    result = __out.join('');
    __out = out;
    return __safe(result);
  }, __sanitize = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else if (typeof value !== 'undefined' && value != null) {
      return __escape(value);
    } else {
      return '';
    }
  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
  __safe = __obj.safe = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else {
      if (!(typeof value !== 'undefined' && value != null)) value = '';
      var result = new String(value);
      result.ecoSafe = true;
      return result;
    }
  };
  if (!__escape) {
    __escape = __obj.escape = function(value) {
      return ('' + value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;');
    };
  }
  (function() {
    (function() {
      var i, len, localSetting, ref;
    
      __out.push('<div class="page-header">\n  <div class="page-header-title">\n    <div class="zammad-switch zammad-switch--small js-setting" data-name="');
    
      __out.push(__sanitize(this.setting.name));
    
      __out.push('">\n       <input name="');
    
      __out.push(__sanitize(this.setting.name));
    
      __out.push('" type="checkbox" id="setting-');
    
      __out.push(__sanitize(this.setting.name));
    
      __out.push('" ');
    
      if (this.checked) {
        __out.push('checked');
      }
    
      __out.push('>\n       <label for="setting-');
    
      __out.push(__sanitize(this.setting.name));
    
      __out.push('"></label>\n    </div>\n    <h1>');
    
      __out.push(this.T.apply(this, [this.setting.title].concat(this.setting.preferences.title_i18n)));
    
      __out.push('</h1>\n  </div>\n</div>\n<div class="page-content">\n  <p class="help-text">');
    
      __out.push(this.T.apply(this, [this.setting.description].concat(this.setting.preferences.description_i18n)));
    
      __out.push('</p>\n  ');
    
      ref = this.subSetting;
      for (i = 0, len = ref.length; i < len; i++) {
        localSetting = ref[i];
        __out.push('\n  <form class="settings-entry" data-name="');
        __out.push(__sanitize(localSetting.name));
        __out.push('">\n    <div class="horizontal end">\n      <div class="form-item flex"></div>\n      <button type="submit" class="btn btn--primary">');
        __out.push(this.T('Submit'));
        __out.push('</button>\n    </div>\n  </form>\n</div>\n');
      }
    
    }).call(this);
    
  }).call(__obj);
  __obj.safe = __objSafe, __obj.escape = __escape;
  return __out.join('');
}:ET