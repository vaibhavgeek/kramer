I"¬(function() {
  var SidebarTemplate,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  SidebarTemplate = (function(superClass) {
    extend(SidebarTemplate, superClass);

    function SidebarTemplate() {
      this.showTemplates = bind(this.showTemplates, this);
      this.sidebarItem = bind(this.sidebarItem, this);
      return SidebarTemplate.__super__.constructor.apply(this, arguments);
    }

    SidebarTemplate.prototype.sidebarItem = function() {
      if (!this.permissionCheck('ticket.agent')) {
        return;
      }
      this.item = {
        name: 'template',
        badgeIcon: 'templates',
        badgeCallback: this.badgeRender,
        sidebarHead: 'Templates',
        sidebarActions: [],
        sidebarCallback: this.showTemplates
      };
      return this.item;
    };

    SidebarTemplate.prototype.showTemplates = function(el) {
      this.el = el;
      return new App.WidgetTemplate({
        el: el
      });
    };

    return SidebarTemplate;

  })(App.Controller);

  App.Config.set('100-Template', SidebarTemplate, 'TicketCreateSidebar');

}).call(this);
:ET