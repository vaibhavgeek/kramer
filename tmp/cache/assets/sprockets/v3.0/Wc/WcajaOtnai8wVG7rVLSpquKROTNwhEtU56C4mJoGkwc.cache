I"(function() {
  var Fail, Index, Success,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Index = (function(superClass) {
    extend(Index, superClass);

    function Index() {
      this.error = bind(this.error, this);
      this.success = bind(this.success, this);
      this.verifyCall = bind(this.verifyCall, this);
      Index.__super__.constructor.apply(this, arguments);
      this.authenticateCheckRedirect();
      this.verifyCall();
    }

    Index.prototype.verifyCall = function() {
      return this.ajax({
        id: 'email_verify',
        type: 'POST',
        url: this.apiPath + "/users/email_verify",
        data: JSON.stringify({
          token: this.token
        }),
        processData: true,
        success: this.success,
        error: this.error
      });
    };

    Index.prototype.success = function() {
      return new Success({
        el: this.el
      });
    };

    Index.prototype.error = function() {
      return new Fail({
        el: this.el
      });
    };

    return Index;

  })(App.Controller);

  Success = (function(superClass) {
    extend(Success, superClass);

    function Success() {
      this.render = bind(this.render, this);
      Success.__super__.constructor.apply(this, arguments);
      this.render();
      this.bind('ui:rerender', (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
    }

    Success.prototype.render = function() {
      var delay;
      this.renderScreenSuccess({
        detail: 'Woo hoo! Your email address has been verified!'
      });
      delay = (function(_this) {
        return function() {
          return _this.navigate('#');
        };
      })(this);
      return this.delay(delay, 20500);
    };

    return Success;

  })(App.ControllerContent);

  Fail = (function(superClass) {
    extend(Fail, superClass);

    function Fail() {
      this.render = bind(this.render, this);
      Fail.__super__.constructor.apply(this, arguments);
      this.render();
      this.bind('ui:rerender', (function(_this) {
        return function() {
          return _this.render();
        };
      })(this));
    }

    Fail.prototype.render = function() {
      return this.renderScreenError({
        detail: 'Unable to verify email. Please contact your administrator.'
      });
    };

    return Fail;

  })(App.ControllerContent);

  App.Config.set('email_verify/:token', Index, 'Routes');

}).call(this);
:ET