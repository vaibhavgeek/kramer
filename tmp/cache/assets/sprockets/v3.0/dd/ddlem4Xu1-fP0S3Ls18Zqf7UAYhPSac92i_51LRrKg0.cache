I"¿(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.UiElement.timezone = (function(superClass) {
    extend(timezone, superClass);

    function timezone() {
      return timezone.__super__.constructor.apply(this, arguments);
    }

    timezone.render = function(attribute, params) {
      var item, timezone_diff, timezone_value, timezones;
      attribute.options = [];
      timezones = App.Config.get('timezones');
      for (timezone_value in timezones) {
        timezone_diff = timezones[timezone_value];
        if (timezone_diff > 0) {
          timezone_diff = '+' + timezone_diff;
        }
        item = {
          name: timezone_value + " (GMT" + timezone_diff + ")",
          value: timezone_value
        };
        attribute.options.push(item);
      }
      this.addNullOption(attribute, params);
      this.sortOptions(attribute, params);
      this.selectedOptions(attribute, params);
      attribute.tag = 'searchable_select';
      attribute.placeholder = App.i18n.translateInline('Enter timzone...');
      return App.UiElement.searchable_select.render(attribute);
    };

    return timezone;

  })(App.UiElement.ApplicationUiElement);

}).call(this);
:ET