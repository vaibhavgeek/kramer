I"¶(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.UiElement.active = (function(superClass) {
    extend(active, superClass);

    function active() {
      return active.__super__.constructor.apply(this, arguments);
    }

    active.render = function(attribute, params) {
      var item;
      attribute["null"] = false;
      attribute.translate = true;
      attribute.options = [
        {
          name: 'active',
          value: true
        }, {
          name: 'inactive',
          value: false
        }
      ];
      this.getConfigOptionList(attribute, params);
      this.sortOptions(attribute, params);
      this.selectedOptions(attribute, params);
      item = $(App.view('generic/select')({
        attribute: attribute
      }));
      item.find('select').data('field-type', 'boolean');
      return item;
    };

    return active;

  })(App.UiElement.ApplicationUiElement);

}).call(this);
:ET