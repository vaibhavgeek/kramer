I"–function(__obj) {
  if (!__obj) __obj = {};
  var __out = [], __capture = function(callback) {
    var out = __out, result;
    __out = [];
    callback.call(this);
    result = __out.join('');
    __out = out;
    return __safe(result);
  }, __sanitize = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else if (typeof value !== 'undefined' && value != null) {
      return __escape(value);
    } else {
      return '';
    }
  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
  __safe = __obj.safe = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else {
      if (!(typeof value !== 'undefined' && value != null)) value = '';
      var result = new String(value);
      result.ecoSafe = true;
      return result;
    }
  };
  if (!__escape) {
    __escape = __obj.escape = function(value) {
      return ('' + value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;');
    };
  }
  (function() {
    (function() {
      var attachment, i, len, ref;
    
      __out.push('<div class="attachments-block js-attachments">\n  <div class="attachments-block-headline">');
    
      __out.push(this.humanTime(this.article.created_at));
    
      __out.push('</div>\n  ');
    
      ref = this.article.attachments;
      for (i = 0, len = ref.length; i < len; i++) {
        attachment = ref[i];
        __out.push('\n    <a class="attachment attachment--preview" title="');
        __out.push(attachment.preferences['Content-Type']);
        __out.push('" target="_blank" href="');
        __out.push(__sanitize(App.Config.get('api_path')));
        __out.push('/ticket_attachment/');
        __out.push(__sanitize(this.article.ticket_id));
        __out.push('/');
        __out.push(__sanitize(this.article.id));
        __out.push('/');
        __out.push(__sanitize(attachment.id));
        __out.push('?disposition=attachment" data-type="attachment"');
        if (this.canDownload(attachment.preferences['Content-Type'])) {
          __out.push(' download');
        }
        __out.push('>\n      <div class="attachment-icon">\n      ');
        if (attachment.preferences && attachment.preferences['Content-Type'] && this.ContentTypeIcon(attachment.preferences['Content-Type'])) {
          __out.push('\n        ');
          if (this.canPreview(attachment.preferences['Content-Type'])) {
            __out.push('\n          <img src="');
            __out.push(__sanitize(App.Config.get('api_path')));
            __out.push('/ticket_attachment/');
            __out.push(__sanitize(this.article.ticket_id));
            __out.push('/');
            __out.push(__sanitize(this.article.id));
            __out.push('/');
            __out.push(__sanitize(attachment.id));
            __out.push('">\n        ');
          } else {
            __out.push('\n          ');
            __out.push(this.Icon(this.ContentTypeIcon(attachment.preferences['Content-Type'])));
            __out.push('\n        ');
          }
          __out.push('\n      ');
        } else {
          __out.push('\n        ');
          __out.push(this.Icon('file-unknown'));
          __out.push('\n      ');
        }
        __out.push('\n      </div>\n      <span class="attachment-name u-highlight">');
        __out.push(__sanitize(attachment.filename));
        __out.push('</span>\n      <div class="attachment-size">');
        __out.push(this.humanFileSize(attachment.size));
        __out.push('</div>\n    </a>\n  ');
      }
    
      __out.push('\n</div>\n');
    
    }).call(this);
    
  }).call(__obj);
  __obj.safe = __objSafe, __obj.escape = __escape;
  return __out.join('');
}:ET