I"ãfunction(__obj) {
  if (!__obj) __obj = {};
  var __out = [], __capture = function(callback) {
    var out = __out, result;
    __out = [];
    callback.call(this);
    result = __out.join('');
    __out = out;
    return __safe(result);
  }, __sanitize = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else if (typeof value !== 'undefined' && value != null) {
      return __escape(value);
    } else {
      return '';
    }
  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
  __safe = __obj.safe = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else {
      if (!(typeof value !== 'undefined' && value != null)) value = '';
      var result = new String(value);
      result.ecoSafe = true;
      return result;
    }
  };
  if (!__escape) {
    __escape = __obj.escape = function(value) {
      return ('' + value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;');
    };
  }
  (function() {
    (function() {
      var header, i, j, len, ref;
    
      __out.push('<div class="js-pager"></div>\n<table class="table table-hover');
    
      if (this["class"]) {
        __out.push(' ');
        __out.push(__sanitize(this["class"]));
      }
    
      __out.push('">\n  <thead>\n    <tr>\n    ');
    
      if (this.sortable) {
        __out.push('\n      <th style="width: 36px" class="table-draggable"></th>\n    ');
      }
    
      __out.push('\n    ');
    
      if (this.checkbox) {
        __out.push('\n      <th style="width: 40px" class="table-checkbox">\n        <label class="checkbox-replacement">\n          <input type="checkbox" value="" name="bulk_all">\n          ');
        __out.push(this.Icon('checkbox', 'icon-unchecked'));
        __out.push('\n          ');
        __out.push(this.Icon('checkbox-checked', 'icon-checked'));
        __out.push('\n          ');
        __out.push(this.Icon('checkbox-indeterminate', 'icon-indeterminate'));
        __out.push('\n        </label>\n      </th>\n    ');
      }
    
      __out.push('\n    ');
    
      if (this.radio) {
        __out.push('\n      <th style="width: 40px" class="table-radio"></th>\n    ');
      }
    
      __out.push('\n    ');
    
      ref = this.headers;
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        header = ref[i];
        __out.push('\n      <th class="js-tableHead');
        if (header.className) {
          __out.push(' ');
          __out.push(__sanitize(header.className));
        }
        if (header.align) {
          __out.push(' align-');
          __out.push(__sanitize(header.align));
        }
        __out.push('" style="');
        if (header.displayWidth) {
          __out.push('width:');
          __out.push(__sanitize(header.displayWidth));
          __out.push('px');
        }
        __out.push('" data-column-key="');
        __out.push(__sanitize(header.name));
        __out.push('">\n        <div class="table-column-head');
        if (this.tableId) {
          __out.push(__sanitize(' js-sort'));
        }
        __out.push('">\n          <div class="table-column-title">');
        __out.push(this.T(header.display));
        __out.push('</div>\n          <div class="table-column-sortIcon">');
        if (header.sortOrderIcon) {
          __out.push(this.Icon(header.sortOrderIcon[0], header.sortOrderIcon[1]));
        }
        __out.push('</div>\n        </div>\n        ');
        if (this.tableId && !header.unresizable && i < this.headers.length - 1) {
          __out.push('\n          <div class="table-col-resize js-col-resize"></div>\n        ');
        }
        __out.push('\n      </th>\n    ');
      }
    
      __out.push('\n    </tr>\n  </thead>\n  <tbody class="js-tableBody">');
    
      __out.push(this.tableBody);
    
      __out.push('</tbody>\n</table>\n<div class="js-pager"></div>\n');
    
    }).call(this);
    
  }).call(__obj);
  __obj.safe = __objSafe, __obj.escape = __escape;
  return __out.join('');
}:ET