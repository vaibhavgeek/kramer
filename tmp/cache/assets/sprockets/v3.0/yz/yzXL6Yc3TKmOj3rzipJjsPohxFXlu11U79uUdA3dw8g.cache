I"function(__obj) {
  if (!__obj) __obj = {};
  var __out = [], __capture = function(callback) {
    var out = __out, result;
    __out = [];
    callback.call(this);
    result = __out.join('');
    __out = out;
    return __safe(result);
  }, __sanitize = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else if (typeof value !== 'undefined' && value != null) {
      return __escape(value);
    } else {
      return '';
    }
  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
  __safe = __obj.safe = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else {
      if (!(typeof value !== 'undefined' && value != null)) value = '';
      var result = new String(value);
      result.ecoSafe = true;
      return result;
    }
  };
  if (!__escape) {
    __escape = __obj.escape = function(value) {
      return ('' + value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;');
    };
  }
  (function() {
    (function() {
      var i, len, ref, tab;
    
      __out.push('<div class="flex main vertical">\n\n  <div class="detail-search">\n    <div class="detail-search-header">\n      <div class="searchfield">\n        <input class="js-search form-control');
    
      __out.push(__sanitize(!this.query ? ' is-empty' : void 0));
    
      __out.push('" name="query" placeholder="');
    
      __out.push(this.Ti('Find what you search. E. g. "search phrase"'));
    
      __out.push('" value="');
    
      __out.push(__sanitize(this.query));
    
      __out.push('" type="search" autocomplete="off">\n        ');
    
      __out.push(this.Icon('magnifier'));
    
      __out.push('\n        <div class="empty-search js-emptySearch">\n          ');
    
      __out.push(this.Icon('diagonal-cross'));
    
      __out.push('\n        </div>\n      </div>\n\n      <div class="tabs tabs-wide">\n        ');
    
      ref = this.tabs;
      for (i = 0, len = ref.length; i < len; i++) {
        tab = ref[i];
        __out.push('\n          <div data-tab-content="');
        __out.push(tab.model);
        __out.push('" class="tab js-tab js-tab');
        __out.push(tab.model);
        if (tab.active) {
          __out.push(' active');
        }
        __out.push('">\n            <span class="tab-name">');
        __out.push(this.T(tab.name));
        __out.push('</span>\n            <span class="tab-badge js-counter">');
        __out.push(tab.count);
        __out.push('</span>\n          </div>\n        ');
      }
    
      __out.push('\n      </div>\n    </div>\n\n    <div class="js-content"></div>\n  </div>\n\n</div>\n');
    
    }).call(this);
    
  }).call(__obj);
  __obj.safe = __objSafe, __obj.escape = __escape;
  return __out.join('');
}:ET