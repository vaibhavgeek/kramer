I"function(__obj) {
  if (!__obj) __obj = {};
  var __out = [], __capture = function(callback) {
    var out = __out, result;
    __out = [];
    callback.call(this);
    result = __out.join('');
    __out = out;
    return __safe(result);
  }, __sanitize = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else if (typeof value !== 'undefined' && value != null) {
      return __escape(value);
    } else {
      return '';
    }
  }, __safe, __objSafe = __obj.safe, __escape = __obj.escape;
  __safe = __obj.safe = function(value) {
    if (value && value.ecoSafe) {
      return value;
    } else {
      if (!(typeof value !== 'undefined' && value != null)) value = '';
      var result = new String(value);
      result.ecoSafe = true;
      return result;
    }
  };
  if (!__escape) {
    __escape = __obj.escape = function(value) {
      return ('' + value)
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;');
    };
  }
  (function() {
    (function() {
      var i, issue, len, ref;
    
      __out.push('<div class="page-header">\n  <div class="page-header-title">\n    <h1>');
    
      __out.push(this.T('Monitoring'));
    
      __out.push('<small></small></h1>\n  </div>\n</div>\n<div class="page-content">\n\n  <div class="settings-entry">\n    <div class="page-header-title">\n      <h2>');
    
      __out.push(this.T('Current Token'));
    
      __out.push('</h2>\n    </div>\n    <p><input class="js-select js-token" type="text" value="');
    
      __out.push(__sanitize(this.data.token));
    
      __out.push('" readonly></p>\n    <button class="btn btn--primary js-resetToken">');
    
      __out.push(this.T('Reset'));
    
      __out.push('</button>\n  </div>\n\n  <div class="settings-entry">\n    <div class="page-header-title">\n      <h2>');
    
      __out.push(this.T('Health Check'));
    
      __out.push('</h2>\n    </div>\n    <p>');
    
      __out.push(this.T('Health information can be retrieved as JSON using'));
    
      __out.push(':</p>\n    <input class="js-select js-url" type="text" value="');
    
      __out.push(this.C('http_type'));
    
      __out.push('://');
    
      __out.push(this.C('fqdn'));
    
      __out.push('/');
    
      __out.push(this.C('api_path'));
    
      __out.push('/monitoring/health_check?token=');
    
      __out.push(__sanitize(this.data.token));
    
      __out.push('" readonly></p>\n  </div>\n\n  <div class="settings-entry">\n    <div class="page-header-title">\n      <h2>');
    
      if (_.isEmpty(this.data.issues)) {
        __out.push(this.Icon('status', 'ok inline'));
      } else {
        __out.push(this.Icon('status', 'error inline'));
      }
    
      __out.push(' ');
    
      __out.push(this.T('Current Status'));
    
      __out.push('</h2>\n    </div>\n    <ul>\n      ');
    
      if (_.isEmpty(this.data.issues)) {
        __out.push('\n        <li>');
        __out.push(this.T('no issues'));
        __out.push('\n      ');
      } else {
        __out.push('\n        ');
        ref = this.data.issues;
        for (i = 0, len = ref.length; i < len; i++) {
          issue = ref[i];
          __out.push('\n          <li>');
          __out.push(__sanitize(issue));
          __out.push('\n        ');
        }
        __out.push('\n      ');
      }
    
      __out.push('\n    </ul>\n    ');
    
      if (_.contains(this.data.actions, 'restart_failed_jobs')) {
        __out.push('\n      <button class="btn btn--primary js-restartFailedJobs">');
        __out.push(this.T('Restart failed jobs'));
        __out.push('</button>\n    ');
      }
    
      __out.push('\n  </div>\n\n</div>\n');
    
    }).call(this);
    
  }).call(__obj);
  __obj.safe = __objSafe, __obj.escape = __escape;
  return __out.join('');
}:ET