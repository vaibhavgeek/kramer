I":(function() {
  var Index,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Index = (function(superClass) {
    extend(Index, superClass);

    Index.prototype.requiredPermission = 'user_preferences.device';

    Index.prototype.header = 'Devices';

    Index.prototype.events = {
      'click [data-type=delete]': 'delete'
    };

    function Index() {
      this.error = bind(this.error, this);
      this["delete"] = bind(this["delete"], this);
      this.render = bind(this.render, this);
      this.load = bind(this.load, this);
      Index.__super__.constructor.apply(this, arguments);
      this.load();
      this.interval((function(_this) {
        return function() {
          return _this.load();
        };
      })(this), 62000);
    }

    Index.prototype.load = function(force) {
      if (force == null) {
        force = false;
      }
      return this.ajax({
        id: 'user_devices',
        type: 'GET',
        url: this.apiPath + "/user_devices",
        success: (function(_this) {
          return function(data) {
            if (!force && _this.lastestUpdated && data && data[0] && _this.lastestUpdated.updated_at === data[0].updated_at) {
              return;
            }
            _this.lastestUpdated = data[0];
            _this.data = data;
            return _this.render();
          };
        })(this)
      });
    };

    Index.prototype.render = function() {
      return this.html(App.view('profile/devices')({
        devices: this.data || []
      }));
    };

    Index.prototype["delete"] = function(e) {
      var id;
      e.preventDefault();
      id = $(e.target).closest('a').data('device-id');
      return this.ajax({
        id: 'user_devices_delete',
        type: 'DELETE',
        url: this.apiPath + "/user_devices/" + id,
        processData: true,
        success: (function(_this) {
          return function() {
            return _this.load(true);
          };
        })(this),
        error: this.error
      });
    };

    Index.prototype.error = function(xhr, status, error) {
      var data;
      data = JSON.parse(xhr.responseText);
      return this.notify({
        type: 'error',
        msg: App.i18n.translateContent(data.message)
      });
    };

    return Index;

  })(App.ControllerSubContent);

  App.Config.set('Devices', {
    prio: 3100,
    name: 'Devices',
    parent: '#profile',
    target: '#profile/devices',
    controller: Index,
    permission: ['user_preferences.device']
  }, 'NavBarProfile');

}).call(this);
:ET