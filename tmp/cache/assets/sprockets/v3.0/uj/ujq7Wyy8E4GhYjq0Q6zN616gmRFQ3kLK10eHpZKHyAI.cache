I"å	(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.UiElement.ical_feed = (function(superClass) {
    extend(ical_feed, superClass);

    function ical_feed() {
      return ical_feed.__super__.constructor.apply(this, arguments);
    }

    ical_feed.render = function(attribute, params) {
      var icalFeeds, icalFeedsSorted, item, updateCheckList, updateCheckManual, updateShadow;
      icalFeeds = App.Config.get('ical_feeds') || {};
      icalFeedsSorted = App.Utils.sortByValue(icalFeeds);
      item = $(App.view('generic/ical_feed')({
        attribute: attribute,
        icalFeeds: icalFeedsSorted
      }));
      updateCheckList = function() {
        if (item.find('.js-checkList').prop('checked')) {
          return;
        }
        if (!item.find('.js-list').val()) {
          return;
        }
        item.find('.js-checkList').prop('checked', true);
        return item.find('.js-checkManual').prop('checked', false);
      };
      updateCheckManual = function() {
        if (item.find('.js-checkManual').prop('checked')) {
          return;
        }
        item.find('.js-checkList').prop('checked', false);
        return item.find('.js-checkManual').prop('checked', true);
      };
      updateShadow = function(selected) {
        if (!selected) {
          selected = item.find('.js-check:checked').attr('value');
        }
        if (selected === 'manual') {
          return item.find('.js-shadow').val(item.find('.js-manual').val());
        } else {
          return item.find('.js-shadow').val(item.find('.js-list').val());
        }
      };
      if (icalFeeds[attribute.value]) {
        updateCheckList();
      } else {
        updateCheckManual();
        item.find('.js-manual').val(attribute.value);
      }
      item.find('.js-check').bind('change', function() {
        return updateShadow();
      });
      item.find('.js-list').bind('click change', function() {
        updateCheckList();
        return updateShadow('list');
      });
      item.find('.js-manual').bind('keyup focus blur', function() {
        updateCheckManual();
        return updateShadow('manual');
      });
      return item;
    };

    return ical_feed;

  })(App.UiElement.ApplicationUiElement);

}).call(this);
:ET