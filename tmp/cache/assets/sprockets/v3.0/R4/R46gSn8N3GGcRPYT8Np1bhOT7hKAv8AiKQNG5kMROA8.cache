I"ì	(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.PostmasterFilter = (function(superClass) {
    extend(PostmasterFilter, superClass);

    function PostmasterFilter() {
      return PostmasterFilter.__super__.constructor.apply(this, arguments);
    }

    PostmasterFilter.configure('PostmasterFilter', 'name', 'channel', 'match', 'perform', 'note', 'active', 'updated_at');

    PostmasterFilter.extend(Spine.Model.Ajax);

    PostmasterFilter.url = PostmasterFilter.apiPath + '/postmaster_filters';

    PostmasterFilter.configure_attributes = [
      {
        name: 'name',
        display: 'Name',
        tag: 'input',
        type: 'text',
        limit: 250,
        'null': false
      }, {
        name: 'channel',
        display: 'Channel',
        type: 'input',
        readonly: 1
      }, {
        name: 'match',
        display: 'Match all of the following',
        tag: 'postmaster_match',
        note: 'You can use regular expression by using "regex:your_reg_exp".'
      }, {
        name: 'perform',
        display: 'Perform action of the following',
        tag: 'postmaster_set'
      }, {
        name: 'note',
        display: 'Note',
        tag: 'textarea',
        limit: 250,
        "null": true
      }, {
        name: 'updated_at',
        display: 'Updated',
        tag: 'datetime',
        readonly: 1
      }, {
        name: 'active',
        display: 'Active',
        tag: 'active',
        "default": true
      }, {
        name: 'created_by_id',
        display: 'Created by',
        relation: 'User',
        readonly: 1
      }, {
        name: 'created_at',
        display: 'Created',
        tag: 'datetime',
        readonly: 1
      }, {
        name: 'updated_by_id',
        display: 'Updated by',
        relation: 'User',
        readonly: 1
      }, {
        name: 'updated_at',
        display: 'Updated',
        tag: 'datetime',
        readonly: 1
      }
    ];

    PostmasterFilter.configure_delete = true;

    PostmasterFilter.configure_overview = ['name'];

    PostmasterFilter.configure_clone = true;

    PostmasterFilter.on('create', function(newRecord) {
      return newRecord.channel = 'email';
    });

    return PostmasterFilter;

  })(App.Model);

}).call(this);
:ET