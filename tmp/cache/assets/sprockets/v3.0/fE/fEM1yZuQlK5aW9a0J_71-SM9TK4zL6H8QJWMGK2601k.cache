I"V(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.ObjectManagerAttribute = (function(superClass) {
    extend(ObjectManagerAttribute, superClass);

    function ObjectManagerAttribute() {
      return ObjectManagerAttribute.__super__.constructor.apply(this, arguments);
    }

    ObjectManagerAttribute.configure('ObjectManagerAttribute', 'name', 'object', 'display', 'active', 'editable', 'data_type', 'data_option', 'screens', 'position');

    ObjectManagerAttribute.extend(Spine.Model.Ajax);

    ObjectManagerAttribute.url = ObjectManagerAttribute.apiPath + '/object_manager_attributes';

    ObjectManagerAttribute.configure_attributes = [
      {
        name: 'name',
        display: 'Name',
        tag: 'input',
        type: 'text',
        limit: 100,
        "null": false
      }, {
        name: 'display',
        display: 'Display',
        tag: 'input',
        type: 'text',
        limit: 100,
        "null": false
      }, {
        name: 'object',
        display: 'Object',
        tag: 'input',
        readonly: 1
      }, {
        name: 'position',
        display: 'Position',
        tag: 'input',
        readonly: 1
      }, {
        name: 'active',
        display: 'Active',
        tag: 'active',
        "default": true
      }, {
        name: 'data_type',
        display: 'Format',
        tag: 'object_manager_attribute',
        "null": false
      }, {
        name: 'updated_at',
        display: 'Updated',
        tag: 'datetime',
        readonly: 1
      }
    ];

    return ObjectManagerAttribute;

  })(App.Model);

}).call(this);
:ET