I"Ó(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  App.Trigger = (function(superClass) {
    extend(Trigger, superClass);

    function Trigger() {
      return Trigger.__super__.constructor.apply(this, arguments);
    }

    Trigger.configure('Trigger', 'name', 'condition', 'perform', 'active');

    Trigger.extend(Spine.Model.Ajax);

    Trigger.url = Trigger.apiPath + '/triggers';

    Trigger.configure_attributes = [
      {
        name: 'name',
        display: 'Name',
        tag: 'input',
        type: 'text',
        limit: 100,
        "null": false
      }, {
        name: 'condition',
        display: 'Conditions for effected objects',
        tag: 'ticket_selector',
        "null": false,
        preview: false,
        action: true,
        hasChanged: true
      }, {
        name: 'perform',
        display: 'Execute changes on objects',
        tag: 'ticket_perform_action',
        "null": true,
        notification: true,
        trigger: true
      }, {
        name: 'active',
        display: 'Active',
        tag: 'active',
        "default": true
      }, {
        name: 'updated_at',
        display: 'Updated',
        tag: 'datetime',
        readonly: 1
      }
    ];

    Trigger.configure_delete = true;

    Trigger.configure_clone = true;

    Trigger.configure_overview = ['name'];


    /*
    @description = '''
    Trigger are....
    
    '''
     */

    return Trigger;

  })(App.Model);

}).call(this);
:ET